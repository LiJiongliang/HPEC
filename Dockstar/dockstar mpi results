# SKaMPI Version 5.0.4 rev. 355

# Started at Tue Aug  9 21:05:58 2011


# begin result "Pingpong_Send_Recv"
count= 1        4     568.5       5.5       16     568.5     358.6
count= 2        8     608.0       0.4        8     608.0     398.5
count= 3       12     607.3       0.5        8     607.3     370.9
count= 4       16     240.4       0.2        8     222.1     240.4
count= 6       24     608.4       0.3        8     608.4     400.1
count= 8       32     611.5       1.6        8     611.5     402.5
count= 11       44     611.2       0.5       16     611.2     385.1
count= 16       64     612.3       0.6        8     612.3     379.7
count= 23       92     604.7       5.5       16     604.7     374.7
count= 32      128     600.4       7.3       16     600.4     384.7
count= 45      180     614.5       1.2        8     614.5     383.3
count= 64      256     614.0       0.4       16     614.0     384.4
count= 91      364     605.6       5.5       16     605.6     392.1
count= 128      512     571.0       0.4        8     571.0     362.2
count= 181      724     576.1       0.9        8     576.1     367.8
count= 256     1024     637.2       1.6       16     637.2     409.0
count= 362     1448     748.3      10.6        8     748.3     680.3
count= 512     2048     709.1      15.4       16     709.1     597.8
count= 724     2896     676.0       1.7        8     676.0     601.8
count= 1024     4096     801.0       8.6        8     801.0     729.1
count= 1448     5792     957.7      19.7        8     927.5     894.5
count= 2048     8192    1017.5       2.2        8    1017.5     924.3
count= 2896    11584    1078.5       4.4        8    1078.5    1015.4
count= 4096    16384    1331.3      13.0        8    1331.3    1099.2
# end result "Pingpong_Send_Recv"
# duration = 0.24 sec

# begin result "Pingpong_Send_Iprobe_Recv"
count= 1        4     632.5       0.8        8     632.5     344.8
count= 2        8     631.1       0.5       16     631.1     344.3
count= 3       12     450.3      64.1       16     450.3     291.7
count= 4       16     629.5       0.7        8     629.5     344.6
count= 6       24     635.5       1.2        8     635.5     345.5
count= 8       32     638.7       0.6        8     638.7     350.7
count= 11       44     640.1       1.1        8     640.1     352.7
count= 16       64     643.7       0.2        8     643.7     355.0
count= 23       92     641.3       0.7       16     641.3     352.6
count= 32      128     646.0       1.5        8     646.0     355.0
count= 45      180     243.8       0.9        8     242.0     240.8
count= 64      256     467.5      69.3       16     467.5     302.4
count= 91      364     634.0       3.2        8     634.0     373.4
count= 128      512     594.1       0.4        8     594.1     326.0
count= 181      724     598.1       0.9        8     598.1     333.2
count= 256     1024     665.4       1.2        8     665.4     414.0
count= 362     1448     629.8       0.9        8     629.8     514.7
count= 512     2048     677.0      23.7        8     677.0     558.0
count= 724     2896     711.3       7.8        8     711.3     585.8
count= 1024     4096     801.5      15.6       16     801.5     620.0
count= 1448     5792     942.1      15.8        8     942.1     668.3
count= 2048     8192    1094.7      25.4        8    1094.7     917.5
count= 2896    11584    1282.0      32.0        8    1282.0    1074.8
count= 4096    16384    1479.0      30.1        8    1479.0    1186.7
# end result "Pingpong_Send_Iprobe_Recv"
# duration = 0.22 sec

# begin result "Pingpong_Send_Irecv"
count= 1        4     569.2       0.3        8     569.2     358.0
count= 2        8     587.8       9.2        8     587.8     361.6
count= 3       12     617.8       1.4        8     617.8     378.0
count= 4       16     605.3       6.9       16     605.3     396.9
count= 6       24     614.3       2.5       16     614.3     390.9
count= 8       32     596.8      13.2        8     596.8     386.4
count= 11       44     589.3       7.2       16     589.3     380.2
count= 16       64     618.2       0.2       16     618.2     380.1
count= 23       92     603.3       8.6       16     603.3     382.2
count= 32      128     583.8       6.1       16     583.8     363.2
count= 45      180     618.3       2.6       16     618.3     399.8
count= 64      256     620.7       0.6        8     620.7     400.8
count= 91      364     609.0       8.7        8     609.0     389.3
count= 128      512     580.5       0.3        8     580.5     369.0
count= 181      724     582.4       0.4       16     582.4     374.3
count= 256     1024     641.2       1.2        8     641.2     441.8
count= 362     1448     646.2       1.9        8     646.2     547.5
count= 512     2048     661.0       2.2        8     661.0     589.5
count= 724     2896     679.8       5.4        8     679.8     600.6
count= 1024     4096     805.9       6.2       16     805.9     730.9
count= 1448     5792     944.9      10.8        8     944.9     865.8
count= 2048     8192     991.5      10.6        8     982.5     921.0
count= 2896    11584    1085.8       4.3        8    1085.8    1014.2
count= 4096    16384    1329.7      30.6        8    1329.7    1163.0
# end result "Pingpong_Send_Irecv"
# duration = 0.25 sec

# begin result "Pingpong_Send_Recv_AnyTag"
count= 1        4     607.5       0.4       16     607.5     398.6
count= 2        8     608.0       0.0        8     608.0     398.5
count= 3       12     606.5       0.7        8     606.5     359.5
count= 4       16     603.3       5.4        8     603.3     386.2
count= 6       24     602.3       5.5       16     602.3     391.3
count= 8       32     611.0       0.8        8     611.0     401.7
count= 11       44     609.2       0.3       16     609.2     395.7
count= 16       64     613.7       0.5        8     613.7     378.9
count= 23       92     596.7       7.4       16     596.7     368.0
count= 32      128     600.1       7.6       16     600.1     382.4
count= 45      180     596.5       7.7       16     596.5     357.6
count= 64      256     604.5       7.8        8     604.5     371.5
count= 91      364     614.3       0.6       16     614.3     405.3
count= 128      512     571.8       0.6       16     571.8     356.1
count= 181      724     575.1       0.4        8     575.1     362.5
count= 256     1024     632.8       0.6        8     632.8     397.8
count= 362     1448     632.5       0.7        8     632.5     559.6
count= 512     2048     674.7      10.1        8     674.7     574.4
count= 724     2896     672.5       0.9        8     672.5     593.7
count= 1024     4096     778.9      14.3       16     778.9     680.3
count= 1448     5792     931.5      19.3        8     931.5     878.9
count= 2048     8192     889.2      10.7        8     889.2     741.0
count= 2896    11584    1086.7       8.8        8    1086.7    1000.8
count= 4096    16384    1328.3      14.2        8    1328.3    1140.4
# end result "Pingpong_Send_Recv_AnyTag"
# duration = 0.24 sec

# begin result "Pingpong_Ssend_Recv"
count= 1        4     523.3       0.6       16     319.9     523.3
count= 2        8     521.8       0.6       16     319.1     521.8
count= 3       12     521.8       0.2        8     322.8     521.8
count= 4       16     404.5      37.6       16     293.3     404.0
count= 6       24     506.1       7.6       16     302.5     506.1
count= 8       32     513.3       6.9       16     313.1     513.3
count= 11       44     524.0       0.4        8     325.6     524.0
count= 16       64     525.1       0.4       16     314.4     525.1
count= 23       92     526.1       0.4       16     315.4     526.1
count= 32      128     517.8       5.1       16     317.5     517.8
count= 45      180     526.5       0.5        8     333.5     526.5
count= 64      256     528.0       1.3        8     329.0     528.0
count= 91      364     526.3       0.8        8     332.1     526.3
count= 128      512     523.0       8.8       16     314.3     523.0
count= 181      724     522.3       7.1       16     325.0     522.3
count= 256     1024     724.3       3.9        8     581.8     724.3
count= 362     1448     700.0      10.1        8     632.5     700.0
count= 512     2048     770.5       4.9        8     637.7     770.5
count= 724     2896     713.9      10.1        8     658.6     708.0
count= 1024     4096     738.9       3.5        8     669.8     714.1
count= 1448     5792     772.1      10.6       16     686.6     772.1
count= 2048     8192    1018.8       2.5        8     944.0    1018.8
count= 2896    11584    1021.2       5.8        8     956.8    1021.2
count= 4096    16384    1146.1      23.6        8    1118.1    1146.1
# end result "Pingpong_Ssend_Recv"
# duration = 0.33 sec

# begin result "Pingpong_Isend_Recv"
count= 1        4     604.7       4.9       16     604.7     393.5
count= 2        8     605.9       7.4        8     605.9     383.5
count= 3       12     602.5       9.5        8     602.5     381.5
count= 4       16     586.9       8.1       16     586.9     364.5
count= 6       24     592.6      10.5        8     592.6     384.0
count= 8       32     604.2      12.2        8     604.2     397.7
count= 11       44     591.9       9.1       16     591.9     380.2
count= 16       64     601.0       7.4       16     601.0     384.3
count= 23       92     599.3       8.0       16     599.3     371.8
count= 32      128     616.7       0.4       16     616.7     395.4
count= 45      180     594.6      12.7        8     594.6     360.7
count= 64      256     593.8       7.2       16     593.8     379.2
count= 91      364     614.3       6.5        8     614.3     396.0
count= 128      512     574.4       0.3       16     574.4     368.3
count= 181      724     578.8       0.2        8     578.8     376.8
count= 256     1024     638.2       2.2        8     638.2     424.3
count= 362     1448     628.2      10.1        8     628.2     554.4
count= 512     2048     656.2       7.3        8     656.2     577.7
count= 724     2896     674.7       2.2        8     674.7     597.4
count= 1024     4096     799.1       9.5        8     799.1     728.2
count= 1448     5792     955.8      10.9        8     935.7     904.6
count= 2048     8192     928.3      12.5       16     923.0     842.8
count= 2896    11584    1084.8       1.6        8    1084.8    1010.5
count= 4096    16384    1303.7       2.9        8    1303.7    1162.2
# end result "Pingpong_Isend_Recv"
# duration = 0.25 sec

# begin result "Pingpong_Issend_Recv"
count= 1        4     524.3       5.2       16     312.0     524.3
count= 2        8     517.8      11.0        8     316.3     517.8
count= 3       12     523.3       5.6       16     312.8     523.3
count= 4       16     529.1       0.4       16     321.4     529.1
count= 6       24     519.3       9.7        8     311.5     519.3
count= 8       32     528.1       2.6       16     317.3     528.1
count= 11       44     525.5       4.8       16     329.7     525.5
count= 16       64     523.3       5.2       16     330.2     523.3
count= 23       92     527.7       3.7       16     328.8     527.7
count= 32      128     534.6       0.7       16     334.1     534.6
count= 45      180     533.5       0.3        8     331.7     533.5
count= 64      256     510.7      12.9        8     349.5     510.7
count= 91      364     521.4       7.2       16     324.3     521.4
count= 128      512     515.6       9.6       16     316.5     515.6
count= 181      724     562.4      19.2       16     405.5     562.4
count= 256     1024     720.7       8.8        8     593.5     720.7
count= 362     1448     648.5       2.9        8     596.9     648.5
count= 512     2048     739.5       0.3        8     641.3     739.5
count= 724     2896     755.8      11.2        8     640.3     755.8
count= 1024     4096     744.4       0.7       16     671.6     744.4
count= 1448     5792     755.0       6.3       16     685.0     755.0
count= 2048     8192    1023.8       2.7        8     916.0    1023.8
count= 2896    11584    1000.0       6.9        8     973.3     995.2
count= 4096    16384    1192.6      22.7        8    1099.7    1192.6
# end result "Pingpong_Issend_Recv"
# duration = 0.36 sec

# begin result "Pingpong_Sendrecv"
count= 1        4     444.4      52.9       16     184.5     321.4
count= 2        8     586.7       6.7        8     179.2     447.5
count= 3       12     252.5       4.9        8     165.6     223.3
count= 4       16     556.2       6.9        8     300.0     295.2
count= 6       24     458.4      41.1       16     316.9     179.6
count= 8       32     562.5       9.9        8     425.2     177.6
count= 11       44     414.9      57.3       16     206.1     348.9
count= 16       64     532.2      14.3       16     277.0     295.1
count= 23       92     593.7       1.5        8     180.5     454.2
count= 32      128     404.7      53.4       16     270.8     274.6
count= 45      180     598.5       1.0        8     181.8     458.5
count= 64      256     567.6       9.4        8     299.5     310.1
count= 91      364     560.3       1.9        8     431.1     172.6
count= 128      512     513.8       2.4        8     413.1     205.2
count= 181      724     427.5      30.4       16     313.5     265.2
count= 256     1024     272.7       7.4       16     261.4     245.9
count= 362     1448     504.8       6.1       16     370.6     371.2
count= 512     2048     519.6       8.7       16     331.7     417.9
count= 724     2896     505.9       9.3       16     405.1     360.3
count= 1024     4096     470.7       4.9       16     391.3     351.3
count= 1448     5792     542.6      27.1       16     491.3     434.5
count= 2048     8192     690.6      16.3       16     523.1     507.0
count= 2896    11584     603.2      21.0       16     523.9     517.0
count= 4096    16384     629.4      11.9       16     589.0     572.3
# end result "Pingpong_Sendrecv"
# duration = 0.17 sec

# begin result "Pingpong_Sendrecv_replace"
count= 1        4     593.5       1.9        8     181.3     453.8
count= 2        8     566.0       4.5        8     301.8     307.5
count= 3       12     399.6      50.6       16     272.1     275.7
count= 4       16     568.3       7.6        8     301.2     310.0
count= 6       24     264.5       0.7        8     228.0     264.5
count= 8       32     559.7       2.7        8     429.3     173.0
count= 11       44     597.5       2.0        8     182.7     456.8
count= 16       64     255.0       2.5        8     218.3     212.7
count= 23       92     566.1       9.3       16     300.3     309.1
count= 32      128     569.3       6.4       16     236.5     375.7
count= 45      180     584.8       9.5        8     315.0     314.8
count= 64      256     573.4       5.5       16     241.9     375.4
count= 91      364     582.3       9.7        8     305.8     322.2
count= 128      512     518.0       1.1        8     401.5     210.2
count= 181      724     516.0       1.8        8     416.7     211.3
count= 256     1024     262.3       8.4       16     256.5     246.6
count= 362     1448     507.7       5.4       16     344.9     404.7
count= 512     2048     519.8       7.5       16     302.8     449.8
count= 724     2896     463.2       4.5       16     393.1     345.0
count= 1024     4096     504.0      11.9       16     432.8     392.9
count= 1448     5792     529.9      10.2       16     486.6     456.8
count= 2048     8192     734.7       8.0       16     596.9     497.5
count= 2896    11584     699.8      25.6       16     625.6     517.8
count= 4096    16384     790.8      14.2        8     648.8     722.3
count= 5793    23172     799.5      10.9       16     780.8     753.9
count= 8192    32768    1225.2      27.3        8    1171.0    1181.7
# end result "Pingpong_Sendrecv_replace"
# duration = 0.19 sec


# Finished at Tue Aug  9 21:06:00 2011
# Total runtime 2 seconds

# SKaMPI Version 5.0.4 rev. 355

# Started at Tue Aug  9 21:08:25 2011


# begin result "MPI_Bcast-procs-short"
procs= 2     1024     200.5       1.5       24      32.9     200.5
# end result "MPI_Bcast-procs-short"
# duration = 0.04 sec

# begin result "MPI_Bcast-procs-long"
procs= 2   262144    5862.5      87.0        8    3072.5    5862.5
# end result "MPI_Bcast-procs-long"
# duration = 0.12 sec

# begin result "MPI_Bcast-length"
count= 1        4      95.9       1.8       33      32.0      95.9
count= 2        8      96.8       1.7       35      31.6      96.8
count= 3       12      97.5       2.5       16      31.4      97.5
count= 4       16      95.9       1.7       33      32.0      95.9
count= 6       24      97.5       1.7       34      32.6      97.5
count= 8       32      97.8       1.7       33      33.6      97.8
count= 11       44      98.0       1.7       33      32.7      98.0
count= 16       64      98.9       1.6       34      32.8      98.9
count= 23       92      98.4       1.7       34      34.7      98.4
count= 32      128     100.2       1.5       36      32.6     100.2
count= 45      180      98.6       1.7       33      33.2      98.6
count= 64      256     193.5       2.6       20      35.3     193.5
count= 91      364     149.5       1.8       24      34.1     149.5
count= 128      512     196.0       2.7        8      29.3     196.0
count= 181      724     147.3       3.3        8      31.5     147.3
count= 256     1024     154.7       3.3        8      32.2     154.7
count= 362     1448     222.4       0.3        8      43.3     222.4
count= 512     2048     221.7       0.2       27      45.6     221.7
count= 724     2896     336.2      19.0       37      59.3     336.2
count= 1024     4096     308.7      13.5       34      65.8     308.7
count= 1448     5792     441.5       2.0        8      89.2     441.5
count= 2048     8192     495.5       8.1       10     104.7     495.5
count= 2896    11584     546.8       3.5        8     137.2     546.8
count= 4096    16384     590.5       1.2        8     179.2     590.5
count= 5793    23172     697.7       0.3        8     213.0     697.7
count= 8192    32768     778.3       2.6        8     280.3     778.3
count= 11585    46340    1189.5       9.7        8     329.5    1189.5
count= 16384    65536    1530.0       7.1        8     395.2    1530.0
count= 23170    92680    2011.2       4.1       11     628.6    2011.2
count= 32768   131072    2701.2      14.1        8    1047.7    2701.2
count= 46341   185364    3720.4      28.4       13    1435.5    3720.4
count= 65536   262144    4955.0      33.7        8    2721.5    4955.0
count= 92682   370728    6425.6      41.4        8    3506.8    6425.6
count= 131072   524288    8292.0      95.9        8    6725.7    8292.0
count= 185364   741456   11061.0      25.1        8    9187.7   11061.0
count= 262144  1048576   15195.7      23.0        8   13762.3   15195.7
count= 370728  1482912   21238.7      51.3        8   19695.1   21238.7
count= 524288  2097152   26576.5     393.5        8   25285.3   26576.5
# end result "MPI_Bcast-length"
# duration = 3.27 sec

# begin result "Bcast_using_Send_Recv-procs-short"
procs= 2     1024     201.0       3.3        8      27.5     201.0
# end result "Bcast_using_Send_Recv-procs-short"
# duration = 0.03 sec

# begin result "Bcast_using_Send_Recv-procs-long"
procs= 2   262144    3729.7       7.9        8    2595.1    3729.7
# end result "Bcast_using_Send_Recv-procs-long"
# duration = 0.09 sec

# begin result "Bcast_using_Send_Recv-length"
count= 1        4      93.6       1.5       34      28.6      93.6
count= 2        8      94.4       1.6       36      28.2      94.4
count= 3       12      93.7       1.9       24      28.5      93.7
count= 4       16      94.0       1.4       35      28.8      94.0
count= 6       24      96.7       1.5       32      28.6      96.7
count= 8       32      95.2       3.1        8      28.7      95.2
count= 11       44      95.7       2.3       16      29.5      95.7
count= 16       64      96.5       1.4       34      29.5      96.5
count= 23       92      96.2       1.6       33      29.4      96.2
count= 32      128      97.2       2.8        8      29.5      97.2
count= 45      180      96.7       1.5       34      30.2      96.7
count= 64      256      97.6       1.9       25      31.2      97.6
count= 91      364      97.2       1.6       34      28.4      97.2
count= 128      512      95.8       1.4       24      24.7      95.8
count= 181      724      96.6       1.7       16      25.2      96.6
count= 256     1024     201.0       3.2        8      27.5     201.0
count= 362     1448     221.6       0.9        8      38.3     221.6
count= 512     2048     267.4      10.9       32      42.6     267.4
count= 724     2896     286.9      11.3       24      54.4     286.9
count= 1024     4096     321.7      21.0       33      61.3     321.7
count= 1448     5792     446.0       0.7        8      74.7     446.0
count= 2048     8192     480.3       5.3       10      94.1     480.3
count= 2896    11584     550.8       2.1        9     127.2     550.8
count= 4096    16384     588.8       1.9        8     161.3     588.8
count= 5793    23172     694.0       1.3       11     221.9     694.0
count= 8192    32768     802.4       9.7        9     271.7     802.4
count= 11585    46340    1060.3       1.8        8     358.3    1060.3
count= 16384    65536    1336.3       5.8       14     546.6    1336.3
count= 23170    92680    1536.7       6.2        8     890.6    1536.7
count= 32768   131072    2140.9       5.3        8    1408.5    2140.9
count= 46341   185364    2811.3       4.5        8    1979.2    2811.3
count= 65536   262144    3738.4       4.2        8    2542.8    3738.4
count= 92682   370728    4927.5      17.8        8    3826.0    4927.5
count= 131072   524288    6711.2      13.6        8    5675.3    6711.2
count= 185364   741456    9041.7      36.9        8    7783.2    9041.7
count= 262144  1048576   12375.4      42.8        8   10835.8   12375.4
count= 370728  1482912   17276.3      26.5        8   16089.0   17276.3
count= 524288  2097152   23593.5      19.8        8   22853.3   23593.5
# end result "Bcast_using_Send_Recv-length"
# duration = 2.88 sec

# begin result "MPI_Barrier-procs"
procs= 2        0     116.8       0.2       16     116.7     113.6
# end result "MPI_Barrier-procs"
# duration = 0.04 sec

# begin result "MPI_Reduce-procs"
procs= 2     1024     179.2       1.7       16     179.2      40.5
# end result "MPI_Reduce-procs"
# duration = 0.04 sec

# begin result "MPI_Reduce-length"
count= 1        4     110.5       1.3       32     110.5      40.1
count= 2        8     106.5       2.2       17     106.5      39.8
count= 3       12     111.1       1.2       32     111.1      41.5
count= 4       16     106.1       1.6       33     106.1      40.0
count= 6       24     107.7       2.2        8     107.7      41.0
count= 8       32     112.8       1.3       32     112.8      40.5
count= 11       44     205.6       2.7        8     205.6      43.7
count= 16       64     113.6       1.2       39     113.6      41.7
count= 23       92     116.5       1.5       34     116.5      42.8
count= 32      128     204.5       2.8       13     204.5      42.8
count= 45      180     120.2       2.7       32     120.2      43.2
count= 64      256     114.2       3.0        8     114.2      43.2
count= 91      364     118.1       1.2       38     118.1      44.1
count= 128      512     115.6       1.2       32     115.6      43.9
count= 181      724     117.6       1.2       32     117.6      48.0
count= 256     1024     175.9       2.5        8     175.9      41.4
count= 362     1448     230.6       6.2       16     230.6      54.6
count= 512     2048     279.4      14.8       39     279.4      55.5
count= 724     2896     501.0       1.1        8     501.0     300.0
count= 1024     4096     515.8       1.9       16     515.8     307.1
count= 1448     5792     528.5       1.2       32     528.5     363.1
count= 2048     8192     794.0       5.1        8     794.0     553.7
count= 2896    11584     930.3      26.9       24     930.3     631.6
count= 4096    16384    1110.0       2.8        8    1110.0     790.2
count= 5793    23172    1202.8       4.8        8    1202.8     848.3
count= 8192    32768    1495.5      21.0        8    1495.5    1062.3
count= 11585    46340    1715.3       3.2        8    1715.3    1275.2
count= 16384    65536    2288.5      11.3        8    2288.5    1642.2
count= 23170    92680    3050.7       7.6        8    3050.7    2295.0
count= 32768   131072    4381.7       7.8        8    4381.7    3324.4
count= 46341   185364    6122.3      43.9        8    6122.3    4480.8
count= 65536   262144    9484.2      52.6        8    9484.2    7610.4
count= 92682   370728   12524.7      14.7        8   12524.7   10335.7
count= 131072   524288   17950.5     123.7        8   17950.5   15894.0
count= 185364   741456   24582.5     133.3        8   24582.5   21714.3
count= 262144  1048576   32280.6     138.0        8   32280.6   30821.7
# end result "MPI_Reduce-length"
# duration = 3.18 sec

# begin result "MPI_Allreduce-procs"
procs= 2     1024     211.7       1.1        8     207.5     210.7
# end result "MPI_Allreduce-procs"
# duration = 0.03 sec

# begin result "MPI_Allreduce-length"
count= 1        4     132.8       0.5        8     132.8     128.6
count= 2        8     131.5       0.9        8     131.5     129.6
count= 3       12     130.8       0.5        8     130.8     129.7
count= 4       16     132.7       0.9        8     132.0     131.1
count= 6       24     131.7       0.2        8     131.7     129.5
count= 8       32     132.8       0.5        8     132.8     131.0
count= 11       44     133.3       0.2        8     133.3     128.7
count= 16       64     131.5       0.2        8     131.5     129.9
count= 23       92     137.5       0.7       16     137.4     133.1
count= 32      128     135.5       0.6        8     133.8     133.8
count= 45      180     136.9       0.8        8     136.9     135.0
count= 64      256     142.0       1.0        8     142.0     136.6
count= 91      364     140.3       0.5        8     139.5     138.8
count= 128      512     146.6       0.5        8     146.6     141.0
count= 181      724     149.7       0.5        8     149.0     145.0
count= 256     1024     207.3       0.8        8     206.4     207.0
count= 362     1448     249.0       1.1        8     249.0     245.5
count= 512     2048     268.7       4.5        8     268.7     257.4
count= 724     2896     544.3       8.6        8     532.5     533.3
count= 1024     4096     540.6       3.9       24     534.9     522.8
count= 1448     5792     781.7       0.8        8     634.5     781.7
count= 2048     8192     769.3      28.8        8     735.5     769.3
count= 2896    11584     955.0      16.3       16     922.5     887.6
count= 4096    16384    1159.8      16.7        8    1144.3    1105.2
count= 5793    23172    1257.1       7.9        8    1219.0    1255.6
count= 8192    32768    1579.2      12.1        8    1579.2    1509.3
count= 11585    46340    1810.3       8.8        8    1761.7    1810.3
count= 16384    65536    2314.3      13.2        8    2301.0    2301.6
count= 23170    92680    2967.0      13.3        8    2967.0    2899.9
count= 32768   131072    4130.5      13.8        8    4123.0    4037.8
count= 46341   185364    5665.5      17.3       21    5665.5    5396.6
count= 65536   262144    9041.5      54.3        8    9041.5    8738.0
count= 92682   370728   12174.5      21.8        8   12174.5   11402.2
count= 131072   524288   18932.2      19.3        8   18932.2   17476.2
count= 185364   741456   24150.3      46.9        8   24150.3   22867.8
count= 262144  1048576   33938.5      92.9        8   33938.5   32719.0
# end result "MPI_Allreduce-length"
# duration = 3.27 sec

# begin result "Allreduce_using_Reduce_Bcast-procs"
procs= 2     1024     350.0       0.9        8     205.0     350.0
# end result "Allreduce_using_Reduce_Bcast-procs"
# duration = 0.04 sec

# begin result "Allreduce_using_Reduce_Bcast-length"
count= 1        4     182.5       0.2       32     135.1     182.5
count= 2        8     203.2       5.6       32     134.9     203.2
count= 3       12     182.8       0.2       32     135.2     182.8
count= 4       16     183.0       0.2       16     134.8     183.0
count= 6       24     184.7       0.1       32     137.7     184.7
count= 8       32     185.6       0.4       13     139.9     185.6
count= 11       44     231.7       0.2        8     138.5     231.7
count= 16       64     186.7       0.5        8     140.1     186.7
count= 23       92     233.5       0.5       16     142.7     233.5
count= 32      128     234.5       0.3        8     143.8     234.5
count= 45      180     189.2       0.9        8     143.5     189.2
count= 64      256     235.5       0.2        8     144.2     235.5
count= 91      364     238.0       0.4        8     147.2     238.0
count= 128      512     192.4       0.6        8     149.0     192.4
count= 181      724     240.7       0.3       16     145.1     240.7
count= 256     1024     348.0       1.0        8     203.8     348.0
count= 362     1448     554.9       0.7        8     298.0     554.9
count= 512     2048     562.5       0.7        8     257.6     562.5
count= 724     2896     762.6       0.7       16     548.5     762.6
count= 1024     4096     873.6      32.9       24     593.8     873.6
count= 1448     5792    1109.2      10.0        8     859.7    1109.2
count= 2048     8192    1219.5      22.2        8     892.8    1219.5
count= 2896    11584    1428.7       8.6        8     992.3    1428.7
count= 4096    16384    1707.2       3.4        8    1291.9    1707.2
count= 5793    23172    1873.8       7.6        8    1400.2    1873.8
count= 8192    32768    2313.2      24.8        8    1784.8    2313.2
count= 11585    46340    2774.5      15.6        8    2108.8    2774.5
count= 16384    65536    3562.3       3.4        8    2721.3    3562.3
count= 23170    92680    4316.7      17.6        8    3562.2    4316.7
count= 32768   131072    6063.1      17.5        8    5292.5    6063.1
count= 46341   185364    7989.2      13.5        8    7184.0    7989.2
count= 65536   262144   11301.0       6.1        8   10654.3   11301.0
count= 92682   370728   15766.2      16.5        8   14965.5   15766.2
count= 131072   524288   22624.5      96.1        8   21889.2   22624.5
count= 185364   741456   30923.0      66.1        8   30166.7   30923.0
count= 262144  1048576   42283.8     284.6        8   41325.5   42283.8
# end result "Allreduce_using_Reduce_Bcast-length"
# duration = 3.63 sec

# begin result "MPI_Reduce_scatter-procs"
procs= 2     1024     151.3       1.1        8     150.3     150.5
# end result "MPI_Reduce_scatter-procs"
# duration = 0.04 sec

# begin result "MPI_Reduce_scatter-length"
count= 1        4     110.5       1.6       28     110.5      44.4
count= 2        8     136.0       1.2        8     135.4     135.5
count= 3       12     136.4       1.3        8     136.4     132.4
count= 4       16     137.3       0.6        8     136.3     133.5
count= 6       24     136.2       0.5        8     135.7     134.5
count= 8       32     138.7       1.0        8     137.7     136.4
count= 11       44     136.6       0.7        8     136.0     134.3
count= 16       64     139.5       0.3        8     137.7     139.5
count= 23       92     141.3       1.1        8     140.5     140.5
count= 32      128     141.0       0.7        8     138.5     139.5
count= 45      180     140.5       0.6        8     140.0     138.5
count= 64      256     146.0       1.1        8     145.5     142.6
count= 91      364     143.3       0.8        8     141.0     142.8
count= 128      512     144.2       0.5       24     141.8     143.9
count= 181      724     146.3       0.9        8     145.3     146.0
count= 256     1024     152.9       1.4        8     150.7     150.4
count= 362     1448     156.0       0.5       16     155.8     152.8
count= 512     2048     219.3       0.8        8     218.8     218.2
count= 724     2896     269.5       1.2        8     269.5     259.2
count= 1024     4096     288.2       5.7        8     287.8     276.7
count= 1448     5792     317.1       1.1       32     312.2     313.6
count= 2048     8192     384.9      11.5       29     371.7     372.8
count= 2896    11584     544.5       1.1       16     502.3     514.7
count= 4096    16384     611.0       6.7        8     554.9     611.0
count= 5793    23172     763.3       3.5        8     751.7     756.6
count= 8192    32768     876.0      17.6        8     871.3     870.0
count= 11585    46340    1112.8       7.7        8    1103.8    1091.1
count= 16384    65536    1448.0       3.0        8    1448.0    1408.6
count= 23170    92680    1941.6       1.5        8    1941.6    1910.3
count= 32768   131072    2624.5      10.3        8    2623.0    2580.5
count= 46341   185364    3544.7       1.7        8    3544.7    3487.5
count= 65536   262144    5422.8       8.2        8    5398.7    5328.8
count= 92682   370728    9005.5      34.8        8    9005.5    8719.5
count= 131072   524288    9232.8      17.8        8    9232.8    9090.5
count= 185364   741456   12573.8      13.0        8   12473.3   12552.3
count= 262144  1048576   18721.0      64.5        8   18721.0   18303.3
# end result "MPI_Reduce_scatter-length"
# duration = 2.32 sec

# begin result "MPI_Alltoall-procs-short"
procs= 2     1024     210.2       1.6        8     208.0     209.2
# end result "MPI_Alltoall-procs-short"
# duration = 0.04 sec

# begin result "MPI_Alltoall-procs-long"
procs= 2   262144    7111.0       8.4        8    7111.0    6904.5
# end result "MPI_Alltoall-procs-long"
# duration = 0.13 sec

# begin result "MPI_Alltoall-length"
count= 1        4     141.7       1.0        8     141.7     135.7
count= 2        8     135.8       0.8        8     133.3     135.5
count= 3       12     134.5       0.5        8     134.5     132.5
count= 4       16     135.8       0.2        8     134.5     135.5
count= 6       24     137.3       0.6        8     136.7     137.3
count= 8       32     136.3       0.4        8     135.1     136.1
count= 11       44     138.3       0.4       16     137.8     136.9
count= 16       64     141.5       0.9        8     139.7     137.9
count= 23       92     140.0       1.0        8     140.0     136.0
count= 32      128     140.9       0.9        8     139.2     139.5
count= 45      180     142.6       1.0        8     141.1     140.8
count= 64      256     141.9       0.5        8     139.4     141.3
count= 91      364     142.8       0.3        8     140.0     142.8
count= 128      512     145.0       0.6        8     141.5     145.0
count= 181      724     150.5       0.6        8     150.5     146.9
count= 256     1024     210.0       0.9        8     204.5     210.0
count= 362     1448     256.0       0.7        8     255.8     252.4
count= 512     2048     274.9       3.7        8     272.2     264.5
count= 724     2896     336.0      12.9       32     335.4     299.3
count= 1024     4096     363.9      13.2       32     327.4     354.0
count= 1448     5792     519.7       4.1        8     519.7     468.7
count= 2048     8192     560.4       3.8       16     512.6     560.4
count= 2896    11584     641.2       5.2        8     638.7     612.9
count= 4096    16384     719.7      11.9        8     708.7     705.7
count= 5793    23172     920.8       0.5        8     901.0     882.3
count= 8192    32768    1078.2       9.7        8    1059.2    1067.0
count= 11585    46340    1331.3       4.8        8    1331.3    1274.5
count= 16384    65536    1832.2       2.9        8    1832.2    1745.7
count= 23170    92680    2352.2      12.6        8    2350.9    2283.0
count= 32768   131072    3695.8       6.3        8    3695.8    3560.2
count= 46341   185364    5223.8      19.3        8    5223.8    4924.5
count= 65536   262144    7094.6       5.0       14    7094.6    6911.0
count= 92682   370728    9325.3      15.1        8    9325.3    9188.5
count= 131072   524288   13810.5      18.0        8   13810.5   12756.0
# end result "MPI_Alltoall-length"
# duration = 1.99 sec

# begin result "Alltoall_using_Isend_Irecv-procs-short"
procs= 2     1024     199.6       0.8        8     196.3     199.6
# end result "Alltoall_using_Isend_Irecv-procs-short"
# duration = 0.03 sec

# begin result "Alltoall_using_Isend_Irecv-procs-long"
procs= 2   262144    7452.0     128.5        8    7420.2    7069.5
# end result "Alltoall_using_Isend_Irecv-procs-long"
# duration = 0.13 sec

# begin result "Alltoall_using_Isend_Irecv-length"
count= 1        4     131.3       0.8        8     130.8     129.8
count= 2        8     132.5       0.8       16     129.7     132.0
count= 3       12     130.8       0.4       32     130.0     129.9
count= 4       16     128.5       0.6        8     128.0     127.3
count= 6       24     131.0       0.4       16     129.6     130.2
count= 8       32     133.0       1.4        8     132.3     132.0
count= 11       44     134.7       0.6        8     128.5     133.5
count= 16       64     132.0       0.4        8     130.0     132.0
count= 23       92     133.5       0.4       33     132.2     132.5
count= 32      128     132.7       0.5        8     130.5     132.5
count= 45      180     132.0       0.4        8     131.5     130.2
count= 64      256     134.5       0.3        8     133.3     134.2
count= 91      364     136.0       0.6        8     131.2     135.0
count= 128      512     138.0       0.7        8     133.5     138.0
count= 181      724     142.0       0.6        8     142.0     136.8
count= 256     1024     198.5       0.6        8     196.8     198.5
count= 362     1448     239.6       0.6        8     237.0     239.3
count= 512     2048     247.3       0.3       32     244.1     246.6
count= 724     2896     280.4       0.8       32     277.5     278.3
count= 1024     4096     425.5       0.9       16     368.7     425.5
count= 1448     5792     440.0      15.9       16     420.7     438.8
count= 2048     8192     516.5       6.5       16     487.0     512.0
count= 2896    11584     595.9       4.0        8     516.2     595.9
count= 4096    16384     663.5       4.2        8     612.3     663.5
count= 5793    23172     793.8      10.0        8     722.1     793.8
count= 8192    32768     973.0       8.3        8     928.0     973.0
count= 11585    46340    1252.9       1.1        8    1182.9    1252.9
count= 16384    65536    1680.7       5.3        8    1660.8    1668.8
count= 23170    92680    2239.5       9.3        8    2140.5    2239.5
count= 32768   131072    3689.3      36.9        8    3665.0    3617.0
count= 46341   185364    5204.6      16.1       15    5204.6    4538.4
count= 65536   262144    7149.5      23.4        8    7148.3    7075.6
count= 92682   370728   10006.7      21.4        8   10006.7    9159.8
count= 131072   524288   14588.5      61.8        8   14588.5   12952.4
# end result "Alltoall_using_Isend_Irecv-length"
# duration = 2.02 sec

# begin result "MPI_Gather-procs-short"
procs= 2     1024     166.7       1.3       24     166.7      32.1
# end result "MPI_Gather-procs-short"
# duration = 0.04 sec

# begin result "MPI_Gather-procs-long"
procs= 2   262144    4849.0       9.7        8    4849.0    4065.3
# end result "MPI_Gather-procs-long"
# duration = 0.10 sec

# begin result "MPI_Gather-length"
count= 1        4     100.3       1.5       36     100.3      38.4
count= 2        8     195.0       3.1        8     195.0      39.8
count= 3       12     106.6       2.4       32     106.6      39.7
count= 4       16     103.3       1.3       37     103.3      38.1
count= 6       24     100.9       2.2       16     100.9      38.9
count= 8       32     196.5       2.7       16     196.5      38.5
count= 11       44     103.0       3.5        8     103.0      41.0
count= 16       64     121.0       6.1       35     121.0      39.5
count= 23       92     103.0       2.2       17     103.0      40.2
count= 32      128     102.7       2.4       16     102.7      40.7
count= 45      180     105.3       2.6        8     105.3      41.5
count= 64      256     143.9       6.8       32     143.9      40.4
count= 91      364     151.2       7.0       32     151.2      41.9
count= 128      512     199.3       1.7       16     199.3      42.5
count= 181      724     108.8       1.1       32     108.8      44.2
count= 256     1024     164.3       1.2       32     164.3      31.5
count= 362     1448     184.6       0.7       32     184.6      41.2
count= 512     2048     240.4       9.4       32     240.4      43.8
count= 724     2896     251.2       9.8       39     251.2      59.8
count= 1024     4096     275.3       1.9       29     275.3      63.4
count= 1448     5792     307.5       0.6       32     307.5      83.1
count= 2048     8192     391.2       7.3       21     391.2     102.9
count= 2896    11584     522.2       1.5       13     522.2     132.4
count= 4096    16384     604.5       2.4       15     604.5     179.2
count= 5793    23172     683.9       6.1       11     683.9     209.6
count= 8192    32768     797.0       0.8        8     797.0     264.9
count= 11585    46340    1025.3       3.5        8    1025.3     358.8
count= 16384    65536    1280.3       0.9        8    1280.3     490.7
count= 23170    92680    1667.8       5.8       10    1667.8     806.0
count= 32768   131072    2813.9       7.5       13    2813.9    1916.6
count= 46341   185364    3377.0      17.2        8    3377.0    2216.5
count= 65536   262144    4813.5      12.9        8    4813.5    4035.2
count= 92682   370728    5994.8      10.5        8    5994.8    5098.5
count= 131072   524288    8885.4      21.3        8    8885.4    7910.4
# end result "MPI_Gather-length"
# duration = 1.89 sec

# begin result "Gather_using_Send_Recv-procs-short"
procs= 2     1024     156.2       2.2       16     156.2      28.2
# end result "Gather_using_Send_Recv-procs-short"
# duration = 0.04 sec

# begin result "Gather_using_Send_Recv-procs-long"
procs= 2   262144    3595.0      10.4        8    3595.0    2841.0
# end result "Gather_using_Send_Recv-procs-long"
# duration = 0.09 sec

# begin result "Gather_using_Send_Recv-length"
count= 1        4     125.2       5.9       34     125.2      28.6
count= 2        8      95.3       1.8       25      95.3      30.1
count= 3       12      94.8       1.5       33      94.8      30.6
count= 4       16      94.5       1.5       34      94.5      30.8
count= 6       24      95.2       1.7       28      95.2      31.1
count= 8       32     105.0       2.2       33     105.0      30.8
count= 11       44      96.5       1.8       25      96.5      31.5
count= 16       64      97.5       1.5       35      97.5      31.6
count= 23       92      97.3       3.2        8      97.3      32.5
count= 32      128      98.6       1.4       32      98.6      30.9
count= 45      180      98.0       3.2        8      98.0      31.0
count= 64      256      97.9       1.6       34      97.9      34.2
count= 91      364     105.1       2.4       33     105.1      33.5
count= 128      512     100.3       1.1       32     100.3      26.0
count= 181      724      99.1       1.8       12      99.1      32.5
count= 256     1024     156.8       2.2       16     156.8      28.0
count= 362     1448     172.6       0.5       24     172.6      38.1
count= 512     2048     176.7       1.2       20     176.7      39.4
count= 724     2896     278.6      12.0       32     278.6      58.7
count= 1024     4096     251.0       1.4       34     251.0      61.5
count= 1448     5792     346.8      10.5       28     346.8      80.5
count= 2048     8192     470.6       8.0       12     470.6      92.8
count= 2896    11584     518.8       2.6       10     518.8     123.2
count= 4096    16384     558.6       2.6        9     558.6     154.5
count= 5793    23172     669.6       2.0       13     669.6     216.3
count= 8192    32768     808.8       0.3        8     808.8     281.5
count= 11585    46340     990.8       9.9        8     990.8     371.5
count= 16384    65536    1281.5       6.5        8    1281.5     513.3
count= 23170    92680    1621.2       7.2        8    1621.2     812.2
count= 32768   131072    2228.5      11.0       12    2228.5    1319.5
count= 46341   185364    2750.6       7.8        8    2750.6    1856.0
count= 65536   262144    3574.8      14.0        8    3574.8    2635.7
count= 92682   370728    4778.4      25.0        8    4778.4    3963.5
count= 131072   524288    6573.3       6.9        8    6573.3    5531.4
# end result "Gather_using_Send_Recv-length"
# duration = 1.87 sec

# begin result "Gather_using_Isend_Irecv_Waitall-procs-short"
procs= 2     1024     157.7       1.4        8     157.7      31.5
# end result "Gather_using_Isend_Irecv_Waitall-procs-short"
# duration = 0.03 sec

# begin result "Gather_using_Isend_Irecv_Waitall-procs-long"
procs= 2   262144    3583.2       1.1        8    3583.2      43.5
# end result "Gather_using_Isend_Irecv_Waitall-procs-long"
# duration = 0.08 sec

# begin result "Gather_using_Isend_Irecv_Waitall-length"
count= 1        4      98.7       1.3       37      98.7      32.3
count= 2        8      99.1       1.4       33      99.1      32.5
count= 3       12     116.7       7.5       36     116.7      31.8
count= 4       16      97.9       1.5       33      97.9      32.4
count= 6       24      98.6       1.9       19      98.6      32.0
count= 8       32      99.3       1.5       33      99.3      32.4
count= 11       44     102.0       2.7       10     102.0      32.5
count= 16       64     100.1       1.4       33     100.1      32.2
count= 23       92     101.3       1.8       25     101.3      34.1
count= 32      128     104.7       1.4       33     104.7      33.2
count= 45      180      99.7       2.3       16      99.7      33.0
count= 64      256     100.7       1.5       34     100.7      33.6
count= 91      364     107.2       2.6       33     107.2      34.4
count= 128      512     101.3       0.8       37     101.3      32.5
count= 181      724     174.9       4.2       39     174.9      28.1
count= 256     1024     157.7       1.4        8     157.7      29.9
count= 362     1448     176.1       0.8       24     176.1      40.0
count= 512     2048     225.9       8.7       37     225.9      42.6
count= 724     2896     279.0      13.9       32     279.0      54.9
count= 1024     4096     298.7      12.0       32     298.7      64.3
count= 1448     5792     358.9       9.3       28     358.9      83.6
count= 2048     8192     393.3       9.8       12     393.3     108.2
count= 2896    11584     514.3       1.1        9     514.3     130.3
count= 4096    16384     607.1       1.9       11     607.1     175.6
count= 5793    23172     669.0       2.1       15     669.0     222.5
count= 8192    32768     817.3       3.0       10     817.3     266.4
count= 11585    46340     985.5       2.8       10     985.5     372.0
count= 16384    65536    1273.5       3.1        8    1273.5     520.3
count= 23170    92680    1637.9      10.7        8    1637.9     797.8
count= 32768   131072    2202.8       1.9       36    2202.8      47.9
count= 46341   185364    2788.0      16.3        8    2788.0      47.3
count= 65536   262144    3633.1      11.0        8    3633.1      43.5
count= 92682   370728    4810.0       9.6        8    4810.0      45.8
count= 131072   524288    6531.7      35.6        8    6531.7      49.7
# end result "Gather_using_Isend_Irecv_Waitall-length"
# duration = 2.06 sec

# begin result "MPI_Allgather-procs-short"
procs= 2     1024     198.3       0.4       16     194.8     197.5
# end result "MPI_Allgather-procs-short"
# duration = 0.04 sec

# begin result "MPI_Allgather-procs-long"
procs= 2   262144    7129.0      23.4        8    7129.0    6970.9
# end result "MPI_Allgather-procs-long"
# duration = 0.13 sec

# begin result "MPI_Allgather-length"
count= 1        4     125.3       0.5        8     124.0     124.8
count= 2        8     124.4       0.2       32     124.0     123.6
count= 3       12     124.3       0.3        8     124.3     122.5
count= 4       16     122.7       0.2       32     120.8     122.5
count= 6       24     125.2       1.0        8     123.7     125.0
count= 8       32     124.5       1.2        8     124.5     120.2
count= 11       44     126.0       0.3        8     126.0     122.2
count= 16       64     124.9       0.4        8     123.3     124.9
count= 23       92     125.4       0.3        8     122.5     125.4
count= 32      128     127.3       0.3       16     124.3     127.1
count= 45      180     129.8       0.3        8     129.8     127.1
count= 64      256     130.1       0.2       32     129.6     128.3
count= 91      364     132.6       0.2       32     132.3     129.5
count= 128      512     134.8       0.9        8     134.8     130.0
count= 181      724     136.3       0.5        8     134.5     136.0
count= 256     1024     196.0       0.4        8     195.0     194.4
count= 362     1448     323.9       8.8       34     311.1     293.8
count= 512     2048     246.5       0.7       24     246.4     242.4
count= 724     2896     456.8       2.0        8     369.5     364.2
count= 1024     4096     405.7      10.4       24     326.1     403.2
count= 1448     5792     454.3      12.3       24     400.5     438.1
count= 2048     8192     499.2       3.2        8     482.3     416.8
count= 2896    11584     626.0       4.3        8     614.2     617.7
count= 4096    16384     709.7       9.7        8     668.7     709.7
count= 5793    23172     899.2       1.9        8     892.5     819.7
count= 8192    32768    1080.0       3.2        8    1072.5    1041.9
count= 11585    46340    1326.6       4.8        8    1326.6    1284.7
count= 16384    65536    1833.1      10.7        8    1825.5    1800.2
count= 23170    92680    2370.0      14.3        8    2367.6    2293.0
count= 32768   131072    3706.5       3.9        8    3706.5    3600.0
count= 46341   185364    5269.0      12.6       12    5269.0    5003.3
count= 65536   262144    7102.0      15.5        8    7102.0    6947.9
count= 92682   370728    9550.5      62.7        8    9510.2    9362.5
count= 131072   524288   13877.7      38.8        8   13877.7   12604.0
# end result "MPI_Allgather-length"
# duration = 2.05 sec

# begin result "MPI_Scatter-procs-short"
procs= 2     1024     203.9       1.5       23      45.7     203.9
# end result "MPI_Scatter-procs-short"
# duration = 0.04 sec

# begin result "MPI_Scatter-procs-long"
procs= 2   262144    4267.2      19.8        8    4267.2    3611.4
# end result "MPI_Scatter-procs-long"
# duration = 0.09 sec

# begin result "MPI_Scatter-length"
count= 1        4      95.4       3.3        8      33.5      95.4
count= 2        8      94.2       3.1        8      33.7      94.2
count= 3       12      95.0       3.5        8      32.8      95.0
count= 4       16      95.6       1.4       34      33.2      95.6
count= 6       24      96.3       3.4        8      34.0      96.3
count= 8       32      97.2       1.5       32      34.1      97.2
count= 11       44      97.9       1.3       34      34.4      97.9
count= 16       64      98.6       1.4       34      33.8      98.6
count= 23       92      97.5       3.1        8      36.0      97.5
count= 32      128      98.5       1.3       35      34.5      98.5
count= 45      180      98.2       3.5        8      35.5      98.2
count= 64      256      97.7       3.4        8      38.5      97.7
count= 91      364     151.4       2.5       31      39.0     151.4
count= 128      512     162.4       4.7       31      38.9     162.4
count= 181      724      98.3       2.3        8      40.9      98.3
count= 256     1024     203.1       3.0        8      41.0     203.1
count= 362     1448     219.5       0.3        8      61.0     219.5
count= 512     2048     221.1       0.5       12      65.8     221.1
count= 724     2896     260.3       6.6        8      80.5     260.3
count= 1024     4096     306.9      12.8       37     106.6     306.9
count= 1448     5792     420.0       9.0        8     140.2     420.0
count= 2048     8192     480.2       4.3        8     165.7     480.2
count= 2896    11584     546.3       1.6        8     226.6     546.3
count= 4096    16384     585.6       1.3        8     306.0     585.6
count= 5793    23172     689.7       0.9        8     374.3     689.7
count= 8192    32768     819.3       1.1        8     546.6     819.3
count= 11585    46340    1061.7       2.0       11     691.0    1061.7
count= 16384    65536    1304.2       7.6        8    1014.9    1304.2
count= 23170    92680    1550.8       4.0        8    1310.0    1550.8
count= 32768   131072    2256.5       2.6        8    2253.2    2210.0
count= 46341   185364    2711.8       4.6        8    2671.1    2711.8
count= 65536   262144    4303.0       3.4        8    4303.0    3631.3
count= 92682   370728    5420.0       7.0        8    5420.0    4855.3
count= 131072   524288    8088.8       8.9        8    8088.8    6515.2
# end result "MPI_Scatter-length"
# duration = 1.71 sec

# begin result "Reduce_Scatterv-procs"
procs= 2     1024     291.2       1.3        8     228.2     291.2
# end result "Reduce_Scatterv-procs"
# duration = 0.04 sec

# begin result "Reduce_Scatterv-length"
count= 1        4     113.6       1.8       25     113.6      42.8
count= 2        8     228.9       0.5        8     144.5     228.9
count= 3       12     181.5       0.3        8     147.5     181.5
count= 4       16     230.3       0.4        8     147.0     230.3
count= 6       24     229.5       0.6        8     147.0     229.5
count= 8       32     182.8       0.3       16     149.0     182.8
count= 11       44     228.7       0.2        8     148.0     228.7
count= 16       64     232.2       0.7        8     151.2     232.2
count= 23       92     187.1       0.6       16     151.5     187.1
count= 32      128     232.5       0.3        8     153.7     232.5
count= 45      180     186.9       0.2       16     154.3     186.9
count= 64      256     186.4       0.4       16     155.4     186.4
count= 91      364     235.6       0.3        8     162.8     235.6
count= 128      512     196.8       5.4       14     165.5     196.8
count= 181      724     238.3       0.9        8     167.2     238.3
count= 256     1024     292.3       1.2        8     227.0     292.3
count= 362     1448     464.5       1.2        8     308.1     464.5
count= 512     2048     529.3       1.6        8     320.0     529.3
count= 724     2896     744.9       1.0       16     575.1     744.9
count= 1024     4096     761.1       0.7       24     571.6     761.1
count= 1448     5792    1082.6       1.0       16     865.5    1082.6
count= 2048     8192    1084.5       1.5        8     891.1    1084.5
count= 2896    11584    1405.8      22.3        8    1043.7    1405.8
count= 4096    16384    1653.0       3.9        8    1260.8    1653.0
count= 5793    23172    1749.6       5.4        8    1392.4    1749.6
count= 8192    32768    2098.5      27.5        8    1685.3    2098.5
count= 11585    46340    2471.1       6.1        8    2019.3    2471.1
count= 16384    65536    3117.5       6.8        8    2576.8    3117.5
count= 23170    92680    3947.3      11.4        8    3290.7    3947.3
count= 32768   131072    5430.5      15.3        8    4614.0    5430.5
count= 46341   185364    6856.7      19.8       11    6174.8    6856.7
count= 65536   262144   10255.3      20.4        8    9497.2   10255.3
count= 92682   370728   14421.7      23.2        8   13677.1   14421.7
count= 131072   524288   20328.0      33.8        8   19712.7   20328.0
count= 185364   741456   27439.0      55.8        8   27003.9   27436.0
count= 262144  1048576   38409.2     194.5        8   37530.2   38409.2
# end result "Reduce_Scatterv-length"
# duration = 3.43 sec

# begin result "MPI_Alltoallv-procs-short"
procs= 2     1024     212.7       0.8        8     207.7     212.7
# end result "MPI_Alltoallv-procs-short"
# duration = 0.04 sec

# begin result "MPI_Alltoallv-procs-long"
procs= 2   262144    7156.8      14.2        8    7125.5    7012.7
# end result "MPI_Alltoallv-procs-long"
# duration = 0.14 sec

# begin result "MPI_Alltoallv-length"
count= 1        4     135.2       1.0        8     134.5     134.6
count= 2        8     138.3       0.5        8     138.3     135.5
count= 3       12     138.8       0.5        8     138.0     137.4
count= 4       16     138.0       0.6        8     136.8     137.8
count= 6       24     139.0       0.6        8     136.7     137.3
count= 8       32     138.7       0.9        8     138.7     134.5
count= 11       44     138.0       0.6        8     137.4     137.7
count= 16       64     139.5       0.5        8     139.2     137.3
count= 23       92     140.0       0.4        8     139.2     139.2
count= 32      128     141.8       0.5        8     140.0     140.8
count= 45      180     142.0       0.4        8     141.4     139.8
count= 64      256     145.0       0.7        8     145.0     141.4
count= 91      364     146.2       0.5        8     146.2     145.0
count= 128      512     148.4       1.3        8     143.1     148.4
count= 181      724     150.0       0.4        8     146.9     150.0
count= 256     1024     211.2       0.5        8     206.8     211.2
count= 362     1448     265.7       5.7        8     265.7     248.3
count= 512     2048     272.0       5.8        8     272.0     256.0
count= 724     2896     299.2       1.3       32     297.0     296.6
count= 1024     4096     441.3       1.6        8     339.2     441.3
count= 1448     5792     499.2       4.5       24     447.0     482.7
count= 2048     8192     576.6       3.1        8     510.7     576.6
count= 2896    11584     628.9       4.9        8     575.9     621.7
count= 4096    16384     715.0       2.8        8     687.4     715.0
count= 5793    23172     891.6      11.3        8     874.6     837.8
count= 8192    32768    1096.7      15.0        8    1096.7    1069.2
count= 11585    46340    1425.8      16.3        8    1425.8    1332.0
count= 16384    65536    1845.4       6.7        8    1845.4    1766.5
count= 23170    92680    2406.1       7.0        8    2388.8    2354.8
count= 32768   131072    3699.7      11.9        8    3692.9    3635.7
count= 46341   185364    5243.7       7.3        8    5243.7    4952.2
count= 65536   262144    7138.0      10.8        8    7137.2    6965.5
count= 92682   370728    9388.3      31.7        8    9388.3    9260.7
count= 131072   524288   13869.8      49.4        8   13869.8   12776.0
# end result "MPI_Alltoallv-length"
# duration = 1.89 sec

# begin result "Alltoallv_using_Isend_Irecv-procs-short"
procs= 2     1024     205.0       0.4        8     204.8     202.2
# end result "Alltoallv_using_Isend_Irecv-procs-short"
# duration = 0.03 sec

# begin result "Alltoallv_using_Isend_Irecv-procs-long"
procs= 2   262144    7049.7      10.4        8    7048.7    6975.2
# end result "Alltoallv_using_Isend_Irecv-procs-long"
# duration = 0.13 sec

# begin result "Alltoallv_using_Isend_Irecv-length"
count= 1        4     130.5       0.2        8     128.5     130.3
count= 2        8     129.8       0.3        8     129.8     127.9
count= 3       12     130.3       0.3       16     126.8     130.0
count= 4       16     130.8       0.6        8     129.5     129.7
count= 6       24     130.2       0.2        8     127.4     130.2
count= 8       32     130.7       0.5        8     130.7     127.3
count= 11       44     132.3       0.2       16     131.0     132.2
count= 16       64     134.2       0.3       16     134.0     132.0
count= 23       92     132.3       0.2        8     131.8     132.0
count= 32      128     136.8       0.5       29     134.8     135.3
count= 45      180     138.5       0.6        8     137.3     135.2
count= 64      256     135.3       0.6        8     134.5     134.5
count= 91      364     137.8       0.2        8     137.3     136.6
count= 128      512     140.5       0.2        8     140.0     138.9
count= 181      724     144.2       0.2        8     141.4     143.7
count= 256     1024     202.5       0.6        8     199.8     202.0
count= 362     1448     250.7       0.8        8     250.7     243.2
count= 512     2048     360.2      18.3       32     339.4     274.9
count= 724     2896     356.9      16.0       32     355.8     287.2
count= 1024     4096     438.3       1.1        8     322.8     438.3
count= 1448     5792     495.0       2.8        8     367.2     495.0
count= 2048     8192     547.7      10.5       22     461.0     547.7
count= 2896    11584     607.0       3.2        8     606.0     595.5
count= 4096    16384     756.0       2.6        8     691.2     756.0
count= 5793    23172     819.5       2.5        8     791.1     819.5
count= 8192    32768    1088.5       6.4        8    1068.4    1088.3
count= 11585    46340    1356.4       2.1        8    1284.7    1356.4
count= 16384    65536    1854.2      11.6        8    1854.2    1784.4
count= 23170    92680    2443.7      10.1        8    2338.1    2443.7
count= 32768   131072    3658.3       7.3        8    3658.3    3556.7
count= 46341   185364    5394.7      46.1        8    5394.7    4805.1
count= 65536   262144    7077.4       9.4        8    7077.4    6913.0
count= 92682   370728    9918.5      16.4        8    9918.5    9080.0
count= 131072   524288   13917.0      30.0        8   13917.0   12718.7
# end result "Alltoallv_using_Isend_Irecv-length"
# duration = 2.10 sec

# begin result "MPI_Gatherv-procs-short"
procs= 2     1024     170.2       1.6       24     170.2      31.5
# end result "MPI_Gatherv-procs-short"
# duration = 0.04 sec

# begin result "MPI_Gatherv-procs-long"
procs= 2   262144    4846.3      15.7        8    4846.3    3968.5
# end result "MPI_Gatherv-procs-long"
# duration = 0.10 sec

# begin result "MPI_Gatherv-length"
count= 1        4     127.7       5.4       35     127.7      31.9
count= 2        8     197.4       2.1       16     197.4      32.7
count= 3       12     106.0       1.3       36     106.0      31.9
count= 4       16     109.3       1.5       32     109.3      32.1
count= 6       24     105.7       1.8       25     105.7      32.6
count= 8       32     106.8       1.9       18     106.8      33.5
count= 11       44     152.9       2.8        8     152.9      34.5
count= 16       64     199.3       3.5        8     199.3      33.7
count= 23       92     111.6       1.3       32     111.6      33.5
count= 32      128     109.9       2.3       16     109.9      33.3
count= 45      180     109.8       1.7       27     109.8      33.9
count= 64      256     110.2       1.5       36     110.2      34.3
count= 91      364     138.1       5.3       32     138.1      33.8
count= 128      512     111.3       0.9       36     111.3      32.4
count= 181      724     114.2       0.9       37     114.2      29.3
count= 256     1024     170.2       1.4       24     170.2      30.9
count= 362     1448     190.4       0.7       24     190.4      40.3
count= 512     2048     245.0      14.7       32     245.0      44.0
count= 724     2896     270.3       1.6       20     270.3      55.6
count= 1024     4096     297.7      12.8       36     297.7      73.1
count= 1448     5792     343.6       7.5       21     343.6      88.1
count= 2048     8192     389.8       7.5       18     389.8      98.2
count= 2896    11584     543.5       6.9       15     543.5     141.7
count= 4096    16384     600.5       5.8       10     600.5     160.7
count= 5793    23172     685.7       1.0        8     685.7     201.3
count= 8192    32768     809.8       2.7        8     809.8     249.7
count= 11585    46340     982.8       0.6        8     982.8     346.5
count= 16384    65536    1285.5       1.2        8    1285.5     517.0
count= 23170    92680    1651.0       2.2        8    1651.0     810.6
count= 32768   131072    2839.2       6.1        8    2839.2    1953.2
count= 46341   185364    3410.0      12.5        8    3410.0    2330.0
count= 65536   262144    4877.3      16.6        8    4877.3    3922.8
count= 92682   370728    5960.5      29.6        8    5960.5    5230.7
count= 131072   524288    8954.3      10.5        8    8954.3    7774.0
# end result "MPI_Gatherv-length"
# duration = 1.82 sec

# begin result "MPI_Allgatherv-procs-short"
procs= 2     1024     204.0       0.4       24     202.5     202.7
# end result "MPI_Allgatherv-procs-short"
# duration = 0.04 sec

# begin result "MPI_Allgatherv-procs-long"
procs= 2   262144    7148.5      11.7        8    7148.5    7008.0
# end result "MPI_Allgatherv-procs-long"
# duration = 0.13 sec

# begin result "MPI_Allgatherv-length"
count= 1        4     130.1       0.7        8     130.1     126.0
count= 2        8     127.6       0.7        8     127.1     126.5
count= 3       12     131.0       0.1        8     130.0     130.8
count= 4       16     126.1       0.6        8     125.8     125.6
count= 6       24     129.0       0.0        8     127.8     129.0
count= 8       32     134.3       1.0        8     134.3     131.5
count= 11       44     134.0       0.0        8     134.0     131.5
count= 16       64     135.0       0.6        8     135.0     132.0
count= 23       92     135.7       0.8        8     134.5     134.0
count= 32      128     136.6       0.3        8     136.6     132.8
count= 45      180     138.5       0.7        8     138.5     133.3
count= 64      256     139.3       1.1        8     139.3     135.2
count= 91      364     139.5       0.7        8     139.5     136.1
count= 128      512     139.8       0.5        8     139.5     137.5
count= 181      724     143.2       0.5        8     142.6     141.5
count= 256     1024     203.1       0.4        8     203.1     201.8
count= 362     1448     250.9       1.1        8     250.9     242.5
count= 512     2048     256.2       0.5        8     256.2     252.0
count= 724     2896     322.0      12.7       32     321.6     283.0
count= 1024     4096     462.7       5.9       24     339.7     462.7
count= 1448     5792     491.1       2.0       16     406.7     491.1
count= 2048     8192     572.5       6.7        8     520.1     572.5
count= 2896    11584     662.3       3.1        8     655.2     647.1
count= 4096    16384     748.6       8.5        8     747.6     744.0
count= 5793    23172     922.7       7.7        8     878.8     922.7
count= 8192    32768    1191.2       9.7        8    1187.2    1120.1
count= 11585    46340    1584.9       2.1        8    1584.9    1543.1
count= 16384    65536    2275.8      19.8        8    2275.8    2065.3
count= 23170    92680    3086.0      12.5        8    3086.0    2917.0
count= 32768   131072    4611.7      10.1        8    4611.7    4268.8
count= 46341   185364    6685.8      19.6        8    6685.8    6259.4
count= 65536   262144    7098.7      10.9        8    7098.7    6882.7
count= 92682   370728    9567.3     114.1        8    9567.3    9167.9
count= 131072   524288   13839.8      35.9        8   13839.8   12906.8
# end result "MPI_Allgatherv-length"
# duration = 1.95 sec

# begin result "MPI_Scatterv-procs-short"
procs= 2     1024     203.0       3.1        8      57.5     203.0
# end result "MPI_Scatterv-procs-short"
# duration = 0.03 sec

# begin result "MPI_Scatterv-procs-long"
procs= 2   262144    4658.2      26.0        8    4118.9    4658.2
# end result "MPI_Scatterv-procs-long"
# duration = 0.10 sec

# begin result "MPI_Scatterv-length"
count= 1        4      95.2       3.3        8      43.7      95.2
count= 2        8      96.4       1.4       32      43.9      96.4
count= 3       12      95.9       1.5       33      43.6      95.9
count= 4       16      95.2       3.3        8      44.2      95.2
count= 6       24      96.3       1.4       34      43.8      96.3
count= 8       32      96.6       1.4       34      44.8      96.6
count= 11       44      97.4       1.3       34      44.2      97.4
count= 16       64      96.8       3.6        8      45.1      96.8
count= 23       92      98.7       1.5       34      44.3      98.7
count= 32      128      98.3       1.3       34      44.7      98.3
count= 45      180     105.6       2.9       34      44.1     105.6
count= 64      256     156.8       3.8       32      46.0     156.8
count= 91      364      99.0       3.1        8      47.3      99.0
count= 128      512      97.6       1.1       32      48.4      97.6
count= 181      724     146.2       2.2        8      50.8     146.2
count= 256     1024     202.8       3.2        8      55.8     202.8
count= 362     1448     219.2       0.5        8      68.7     219.2
count= 512     2048     220.7       0.4       28      68.4     220.7
count= 724     2896     333.5      12.5       20      93.2     333.5
count= 1024     4096     330.1       7.7       22     106.1     330.1
count= 1448     5792     481.8       1.6        8     121.2     481.8
count= 2048     8192     521.7       1.3        8     160.3     521.7
count= 2896    11584     545.8       2.2       10     194.1     545.8
count= 4096    16384     686.0       2.1        8     268.7     686.0
count= 5793    23172     741.8       1.8        8     299.5     741.8
count= 8192    32768     922.0       4.8        8     470.5     922.0
count= 11585    46340    1200.7       2.3        8     578.7    1200.7
count= 16384    65536    1650.2       2.1        8     901.5    1650.2
count= 23170    92680    1813.0       6.8        8    1179.7    1813.0
count= 32768   131072    2713.5      17.4        8    1978.3    2713.5
count= 46341   185364    3244.2       8.1        8    2517.8    3244.2
count= 65536   262144    4793.6       9.0        8    4204.0    4793.6
count= 92682   370728    5792.3      20.4        8    5126.8    5792.3
count= 131072   524288    8804.3      17.5        8    7940.5    8804.3
# end result "MPI_Scatterv-length"
# duration = 1.81 sec

# begin result "MPI_Scan-procs"
procs= 2     1024     213.4       0.5        8     209.7     213.2
# end result "MPI_Scan-procs"
# duration = 0.03 sec

# begin result "MPI_Scan-length"
count= 1        4     131.5       0.2       32     131.3     130.3
count= 2        8     131.6       0.3        8     131.1     128.0
count= 3       12     128.9       0.4       16     127.7     127.5
count= 4       16     131.8       0.5        8     130.7     131.8
count= 6       24     136.0       1.2        8     136.0     131.3
count= 8       32     134.5       0.6        8     134.0     132.5
count= 11       44     133.3       0.5        8     133.0     131.5
count= 16       64     136.5       0.6        8     136.4     134.3
count= 23       92     136.3       0.5        8     135.8     136.1
count= 32      128     134.3       0.8        8     134.0     133.8
count= 45      180     139.4       1.0       10     135.9     139.4
count= 64      256     138.5       0.9        8     136.0     138.5
count= 91      364     144.2       1.6        8     141.6     142.8
count= 128      512     143.5       0.3        8     142.5     143.3
count= 181      724     149.3       0.4       16     145.5     149.3
count= 256     1024     210.8       0.2        8     207.2     209.8
count= 362     1448     252.7       0.9        8     247.5     252.7
count= 512     2048     280.4       0.9       16     260.6     280.4
count= 724     2896     310.6       2.3       32     303.9     309.0
count= 1024     4096     473.4       6.0       16     338.7     473.4
count= 1448     5792     525.8       8.2       24     412.0     506.0
count= 2048     8192     602.6       7.7       16     533.2     578.2
count= 2896    11584     744.2       6.4        8     681.3     744.2
count= 4096    16384     902.2       2.7        8     820.0     902.2
count= 5793    23172    1061.3       1.1        8    1002.5    1061.3
count= 8192    32768    1409.2       5.2        8    1272.7    1409.2
count= 11585    46340    1894.8       6.8        8    1677.8    1894.8
count= 16384    65536    2681.5       6.5        8    2354.3    2681.5
count= 23170    92680    3715.6       5.9        8    3159.2    3715.6
count= 32768   131072    5954.2      17.1        8    5093.9    5954.2
count= 46341   185364    8116.5      10.6       14    7036.1    8116.5
count= 65536   262144   11870.3      21.5        8   10158.4   11870.3
count= 92682   370728   17197.3      46.4        8   14891.5   17197.3
count= 131072   524288   25917.2     109.2        8   23149.0   25917.2
count= 185364   741456   35390.8      15.5        8   30893.7   35390.8
count= 262144  1048576   51816.3     164.6        8   45674.2   51816.3
# end result "MPI_Scan-length"
# duration = 3.84 sec

# begin result "MPI_Comm_split-procs"
procs= 2        0     363.6       1.3        8     363.6     359.5
# end result "MPI_Comm_split-procs"
# duration = 0.04 sec

# begin result "MPI_Comm_dup-procs"
procs= 2        0     144.0       0.0        8     140.1     144.0
# end result "MPI_Comm_dup-procs"
# duration = 0.04 sec


# Finished at Tue Aug  9 21:09:16 2011
# Total runtime 51 seconds

# SKaMPI Version 5.0.4 rev. 355

# Started at Tue Aug  9 21:09:25 2011


# begin result "MPI_Wtime_avg"
iters= 1        0       1.0       0.0       16       1.0
iters= 2        0       1.0       0.0       16       1.0
iters= 3        0       1.1       0.0       16       1.1
iters= 4        0       1.1       0.0       16       1.1
iters= 5        0       1.1       0.0       16       1.1
iters= 6        0       1.0       0.0       16       1.0
iters= 7        0       1.1       0.0       16       1.1
iters= 8        0       1.1       0.0        8       1.1
iters= 9        0       1.1       0.0        8       1.1
iters= 10        0       1.0       0.0        8       1.0
iters= 11        0       1.1       0.0        8       1.1
iters= 12        0       1.1       0.0        8       1.1
iters= 13        0       1.1       0.0        8       1.1
iters= 14        0       1.1       0.0        8       1.1
iters= 15        0       1.1       0.0        8       1.1
iters= 16        0       1.1       0.0        8       1.1
iters= 17        0       1.1       0.0       16       1.1
iters= 18        0       1.1       0.0        8       1.1
iters= 19        0       1.1       0.0        8       1.1
iters= 20        0       1.1       0.0       16       1.1
iters= 21        0       1.1       0.0        8       1.1
iters= 22        0       1.1       0.0        8       1.1
iters= 23        0       1.0       0.0        8       1.0
iters= 24        0       1.1       0.0        8       1.1
iters= 25        0       1.1       0.0        8       1.1
iters= 26        0       1.1       0.0       16       1.1
iters= 27        0       1.1       0.0       16       1.1
iters= 28        0       1.1       0.0        8       1.1
iters= 29        0       1.1       0.0       16       1.1
iters= 30        0       1.1       0.0        8       1.1
iters= 31        0       1.1       0.0       16       1.1
iters= 32        0       1.1       0.0        8       1.1
iters= 33        0       1.1       0.0       16       1.1
iters= 34        0       1.1       0.0       16       1.1
iters= 35        0       1.1       0.0       16       1.1
iters= 36        0       1.1       0.0        8       1.1
iters= 37        0       1.1       0.0       16       1.1
iters= 38        0       1.1       0.0        8       1.1
iters= 39        0       1.1       0.0       16       1.1
iters= 40        0       1.1       0.0        8       1.1
iters= 41        0       1.1       0.0       16       1.1
iters= 42        0       1.1       0.0       16       1.1
iters= 43        0       1.1       0.0        8       1.1
iters= 44        0       1.1       0.0       16       1.1
iters= 45        0       1.1       0.0       16       1.1
iters= 46        0       1.1       0.0        8       1.1
iters= 47        0       1.1       0.0       16       1.1
iters= 48        0       1.1       0.0        8       1.1
iters= 49        0       1.1       0.0        8       1.1
iters= 50        0       1.1       0.0        8       1.1
iters= 51        0       1.1       0.0       16       1.1
iters= 52        0       1.1       0.0       16       1.1
iters= 53        0       1.1       0.0       16       1.1
iters= 54        0       1.1       0.0       16       1.1
iters= 55        0       1.1       0.0       16       1.1
iters= 56        0       1.1       0.0        8       1.1
iters= 57        0       1.1       0.0        8       1.1
iters= 58        0       1.1       0.0       16       1.1
iters= 59        0       1.1       0.0       16       1.1
iters= 60        0       1.1       0.0       16       1.1
iters= 61        0       1.1       0.0        8       1.1
iters= 62        0       1.1       0.0       16       1.1
iters= 63        0       1.1       0.0        8       1.1
iters= 64        0       1.1       0.0       16       1.1
iters= 65        0       1.1       0.0        8       1.1
iters= 66        0       1.1       0.0       16       1.1
iters= 67        0       1.1       0.0        8       1.1
iters= 68        0       1.1       0.0       16       1.1
iters= 69        0       1.1       0.0        8       1.1
iters= 70        0       1.1       0.0       16       1.1
iters= 71        0       1.1       0.0       16       1.1
iters= 72        0       1.1       0.0        8       1.1
iters= 73        0       1.1       0.0       16       1.1
iters= 74        0       1.1       0.0       16       1.1
iters= 75        0       1.1       0.0       16       1.1
iters= 76        0       1.1       0.0        8       1.1
iters= 77        0       1.1       0.0       16       1.1
iters= 78        0       1.1       0.0       16       1.1
iters= 79        0       1.1       0.0       16       1.1
iters= 80        0       1.1       0.0        8       1.1
iters= 81        0       1.1       0.0       16       1.1
iters= 82        0       1.1       0.0       16       1.1
iters= 83        0       1.1       0.0        8       1.1
iters= 84        0       1.1       0.0       16       1.1
iters= 85        0       1.1       0.0       16       1.1
iters= 86        0       1.1       0.0       16       1.1
iters= 87        0       1.1       0.0       16       1.1
iters= 88        0       1.1       0.0       16       1.1
iters= 89        0       1.1       0.0       16       1.1
iters= 90        0       1.1       0.0       16       1.1
iters= 91        0       1.1       0.0       16       1.1
iters= 92        0       1.1       0.0       16       1.1
iters= 93        0       1.1       0.0        8       1.1
iters= 94        0       1.1       0.0       16       1.1
iters= 95        0       1.1       0.0       16       1.1
iters= 96        0       1.1       0.0       16       1.1
iters= 97        0       1.1       0.0       16       1.1
iters= 98        0       1.1       0.0       16       1.1
iters= 99        0       1.1       0.0        8       1.1
iters= 100        0       1.1       0.0       16       1.1
# end result "MPI_Wtime_avg"
# duration = 0.24 sec


# Finished at Tue Aug  9 21:09:25 2011
# Total runtime 0 seconds

# SKaMPI Version 5.0.4 rev. 355

# Started at Tue Aug  9 21:10:10 2011


# begin result "MPI_Win_fence_open"
count= 1        4       3.1       0.0       16       3.0       3.0
count= 2        8       3.0       0.0       32       2.8       2.6
count= 3       12       3.0       0.0       16       2.6       2.9
count= 4       16       3.0       0.1        8       2.7       2.7
count= 6       24       3.0       0.0       24       2.9       2.6
count= 8       32       3.0       0.0       32       2.7       2.8
count= 11       44       3.0       0.0       24       2.5       2.8
count= 16       64       3.0       0.0       24       2.5       2.8
count= 23       92       2.9       0.0       24       2.9       2.8
count= 32      128       3.0       0.0       32       2.6       2.7
count= 45      180       2.9       0.0       24       2.6       2.5
count= 64      256       2.9       0.0       32       2.6       2.7
count= 91      364       3.0       0.1        8       2.8       2.7
count= 128      512       3.0       0.0       32       2.8       2.6
count= 181      724       3.1       0.0       24       2.8       2.7
count= 256     1024       3.0       0.0       24       2.8       2.6
count= 362     1448       3.1       0.0       24       2.5       2.9
count= 512     2048       3.0       0.0       31       2.6       2.7
count= 724     2896       3.0       0.1       32       2.6       2.9
count= 1024     4096       3.1       0.0       32       2.8       2.7
count= 1448     5792       3.1       0.0       31       2.9       2.8
count= 2048     8192       2.9       0.0       32       2.6       2.4
count= 2896    11584       3.0       0.1       12       2.7       2.8
count= 4096    16384       2.9       0.1        8       2.6       2.5
count= 5793    23172       3.0       0.0       24       2.8       2.5
count= 8192    32768       3.1       0.0       16       2.7       2.7
count= 11585    46340       3.1       0.0       16       3.0       2.7
count= 16384    65536       3.0       0.0       32       2.8       2.9
count= 23170    92680       3.0       0.0       16       2.8       2.7
count= 32768   131072       3.0       0.0       24       2.6       2.6
count= 46341   185364       3.0       0.0       32       2.7       2.7
count= 65536   262144       3.0       0.0       32       2.9       2.8
count= 92682   370728       3.0       0.0       31       2.6       2.7
count= 131072   524288       3.0       0.0       37       2.7       2.8
count= 185364   741456       3.0       0.0       32       2.8       2.7
count= 262144  1048576       3.0       0.1        8       3.0       3.0
# end result "MPI_Win_fence_open"
# duration = 2.27 sec

# begin result "MPI_Win_fence_close"
count= 1        4     143.1       1.1        8     143.0     139.2
count= 2        8     138.8       0.2        8     138.8     135.9
count= 3       12     138.0       0.1        8     138.0     134.7
count= 4       16     139.8       0.8        8     138.8     139.2
count= 6       24     138.8       0.2        8     138.8     134.9
count= 8       32     138.3       0.2        8     138.3     137.6
count= 11       44     139.3       0.5        8     136.8     139.3
count= 16       64     139.5       0.3        8     137.7     139.2
count= 23       92     138.5       0.8        8     138.5     137.4
count= 32      128     138.3       1.3        8     136.7     136.8
count= 45      180     138.5       0.3        8     138.3     137.3
count= 64      256     139.2       0.2        8     138.8     135.5
count= 91      364     139.0       1.1        8     138.3     137.4
count= 128      512     139.1       0.6        8     138.3     138.3
count= 181      724     139.0       0.4        8     139.0     137.5
count= 256     1024     142.0       1.4        8     140.3     137.0
count= 362     1448     139.5       0.5        8     138.8     137.7
count= 512     2048     141.0       1.1        8     141.0     135.2
count= 724     2896     139.8       0.8        8     139.8     137.5
count= 1024     4096     139.0       0.6        8     137.5     138.2
count= 1448     5792     138.8       0.5        8     138.2     138.0
count= 2048     8192     138.7       0.2       32     136.7     138.0
count= 2896    11584     137.9       0.1        8     137.9     136.1
count= 4096    16384     135.7       0.2        8     134.5     135.2
count= 5793    23172     136.7       1.1        8     136.7     132.1
count= 8192    32768     136.3       0.5        8     135.0     135.6
count= 11585    46340     138.8       0.2        8     137.2     138.7
count= 16384    65536     138.3       0.2        8     136.8     137.7
count= 23170    92680     138.8       0.5        8     137.9     138.0
count= 32768   131072     137.8       0.2        8     134.7     137.8
count= 46341   185364     138.5       0.3        8     138.5     135.7
count= 65536   262144     138.6       0.2       32     138.0     137.4
count= 92682   370728     137.8       0.2        8     137.3     136.9
count= 131072   524288     138.5       0.5        8     138.2     137.2
count= 185364   741456     137.3       0.2        8     134.8     137.3
count= 262144  1048576     139.5       0.3        8     139.5     136.8
# end result "MPI_Win_fence_close"
# duration = 1.69 sec

# begin result "MPI_Win_fence_close-noput"
count= 1        4     142.0       1.1        8     142.0     138.5
count= 2        8     138.2       0.5        8     138.2     136.3
count= 3       12     138.2       0.6       20     137.4     135.0
count= 4       16     138.3       0.2        8     136.7     137.3
count= 6       24     139.2       0.6        8     139.2     136.7
count= 8       32     137.7       0.5        8     137.0     136.8
count= 11       44     137.0       0.1        8     136.0     136.8
count= 16       64     138.5       0.3        8     138.5     133.1
count= 23       92     140.1       0.3       32     139.4     138.1
count= 32      128     138.8       0.5        8     138.5     137.8
count= 45      180     138.2       0.2       16     137.6     137.4
count= 64      256     139.7       0.5        8     139.5     138.9
count= 91      364     138.9       0.4       24     137.9     137.5
count= 128      512     135.2       0.6        8     135.2     132.0
count= 181      724     137.5       0.2        8     137.0     136.8
count= 256     1024     140.0       0.1        8     139.1     138.2
count= 362     1448     138.0       0.0        8     137.5     137.3
count= 512     2048     139.1       0.6        8     137.7     138.0
count= 724     2896     136.9       1.3        8     136.9     133.8
count= 1024     4096     138.2       1.2        8     138.0     136.3
count= 1448     5792     139.3       1.3        8     138.2     137.1
count= 2048     8192     135.7       0.8        8     135.7     133.8
count= 2896    11584     142.8       0.2        8     140.5     138.2
count= 4096    16384     138.6       0.9        8     138.6     136.7
count= 5793    23172     139.1       0.7        8     138.8     137.7
count= 8192    32768     135.5       0.6        8     135.5     134.2
count= 11585    46340     138.0       0.4        8     137.5     136.7
count= 16384    65536     138.5       0.6        8     137.6     137.5
count= 23170    92680     138.8       0.2        8     138.8     132.7
count= 32768   131072     137.9       0.1        8     136.7     137.4
count= 46341   185364     138.5       0.6        8     138.4     136.5
count= 65536   262144     137.7       0.3        8     137.3     136.7
count= 92682   370728     138.0       0.6        8     137.8     136.4
count= 131072   524288     138.6       0.9        8     138.6     135.1
count= 185364   741456     136.0       0.9        8     136.0     133.8
count= 262144  1048576     137.7       0.2        8     137.5     136.3
# end result "MPI_Win_fence_close-noput"
# duration = 1.77 sec

# begin result "MPI_Win_fence_close-nodes-short"
procs= 1       16      12.0       0.1        8      12.0
procs= 2       16     138.2       1.1        8     136.2     136.6
# end result "MPI_Win_fence_close-nodes-short"
# duration = 0.05 sec

# begin result "MPI_Win_fence_close-nodes-long"
procs= 1  1048576      12.2       0.2        8      12.2
procs= 2  1048576     139.1       1.1        8     139.1     138.3
# end result "MPI_Win_fence_close-nodes-long"
# duration = 0.05 sec

# begin result "MPI_Win_fence_openclose"
procs= 1  1048576      12.3       0.3        8      12.3
procs= 2  1048576     136.1       0.4        8     134.8     135.1
# end result "MPI_Win_fence_openclose"
# duration = 0.05 sec

# begin result "MPI_Win_start"
procs= 1  1048576       3.1       0.0       16       3.1
procs= 2  1048576       4.0       0.0       16       4.0    ---   
# end result "MPI_Win_start"
# duration = 0.07 sec

# begin result "MPI_Win_start with MPI_MODE_NOCHECK"
procs= 1  1048576       2.6       0.1       32       2.6
procs= 2  1048576       4.0       0.0       16       4.0    ---   
# end result "MPI_Win_start with MPI_MODE_NOCHECK"
# duration = 0.06 sec

# begin result "MPI_Win_start with delayed MPI_Win_post"
procs= 1  1048576       2.7       0.1       32       2.7
procs= 2  1048576       3.4       0.1       32       3.4    ---   
# end result "MPI_Win_start with delayed MPI_Win_post"
# duration = 0.55 sec

# begin result "MPI_Win_post"
procs= 1  1048576       8.5       0.2        8       8.5
procs= 2  1048576      64.4       0.2        8      64.4      58.4
# end result "MPI_Win_post"
# duration = 0.05 sec

# begin result "MPI_Win_post with MPI_MODE_NOCHECK"
procs= 1  1048576       8.1       0.0        8       8.1
procs= 2  1048576      64.7       0.3        8      64.7      42.2
# end result "MPI_Win_post with MPI_MODE_NOCHECK"
# duration = 0.05 sec

# begin result "MPI_Win_post with MPI_MODE_NOSTORE"
procs= 1  1048576       8.3       0.2        8       8.3
procs= 2  1048576      65.4       0.3       16      65.4      41.2
# end result "MPI_Win_post with MPI_MODE_NOSTORE"
# duration = 0.07 sec

# begin result "MPI_Win_complete"
procs= 1  1048576      10.0       0.0       16      10.0
procs= 2  1048576   14144.3     201.6        8   14144.3    ---   
# end result "MPI_Win_complete"
# duration = 0.30 sec

# begin result "MPI_Win_complete without MPI_Put"
procs= 1  1048576      10.0       0.0        8      10.0
procs= 2  1048576     109.0       0.2       32     109.0    ---   
# end result "MPI_Win_complete without MPI_Put"
# duration = 0.09 sec

# begin result "MPI_Win_complete delayed"
procs= 2  1048576   61758.7      19.4        8   61758.7    ---   
# end result "MPI_Win_complete delayed"
# duration = 0.96 sec

# begin result "MPI_Win_complete delayed, small"
procs= 2        4     116.4       0.5        8     116.4    ---   
# end result "MPI_Win_complete delayed, small"
# duration = 0.77 sec

# begin result "MPI_Win_complete delayed without MPI_Put"
procs= 2  1048576     113.2       0.6        8     113.2    ---   
# end result "MPI_Win_complete delayed without MPI_Put"
# duration = 0.77 sec

# begin result "MPI_Win_wait delayed"
procs= 2  1048576   65650.0      51.6        8   65650.0    ---   
# end result "MPI_Win_wait delayed"
# duration = 1.00 sec

# begin result "MPI_Win_wait delayed,small"
procs= 2        4   50142.0       1.4        8   50142.0    ---   
# end result "MPI_Win_wait delayed,small"
# duration = 0.77 sec

# begin result "MPI_Win_wait delayed without MPI_Put"
procs= 2  1048576   50131.1       3.5        8   50131.1    ---   
# end result "MPI_Win_wait delayed without MPI_Put"
# duration = 0.77 sec

# begin result "MPI_Win_test"
procs= 2  1048576      57.7       0.3       11      57.7    ---   
# end result "MPI_Win_test"
# duration = 5052.90 sec

# begin result "MPI_Win_test without MPI_Put"
procs= 2  1048576      32.1       1.8       32      32.1    ---   
# end result "MPI_Win_test without MPI_Put"
# duration = 0.08 sec

# begin result "MPI_Win_test delayed"
procs= 2  1048576      13.4       0.2        8      13.4    ---   
# end result "MPI_Win_test delayed"
# duration = 0.37 sec

# begin result "MPI_Win_test delayed without MPI_Put"
procs= 2  1048576      11.0       0.0        8      11.0    ---   
# end result "MPI_Win_test delayed without MPI_Put"
# duration = 0.19 sec

# begin result "MPI_Win_create"
Ctrl-C caught... cleaning up processes
# SKaMPI Version 5.0.4 rev. 355

# Started at Wed Aug 10 13:22:43 2011


# begin result "MPI_Win_fence_open"
count= 1        4       3.1       0.0       24       2.7       3.0
count= 2        8       3.0       0.0       24       2.5       2.7
count= 3       12       2.9       0.0       32       2.7       2.7
count= 4       16       3.1       0.0       16       2.7       2.6
count= 6       24       2.9       0.1       32       2.4       2.7
count= 8       32       3.0       0.1        8       2.3       3.0
count= 11       44       2.9       0.1       32       2.4       2.6
count= 16       64       3.0       0.0       32       2.7       2.6
count= 23       92       3.0       0.1        8       2.8       3.0
count= 32      128       3.0       0.0       24       2.9       2.5
count= 45      180       3.0       0.0       15       2.5       2.9
count= 64      256       3.1       0.0       24       2.8       2.9
count= 91      364       3.1       0.0       16       2.9       2.9
count= 128      512       3.0       0.0       32       2.5       2.8
count= 181      724       3.0       0.0       24       2.8       2.5
count= 256     1024       3.0       0.0       32       2.6       2.7
count= 362     1448       3.0       0.0       32       2.7       2.7
count= 512     2048       3.0       0.0       24       2.6       2.7
count= 724     2896       3.0       0.0       32       2.8       2.7
count= 1024     4096       2.9       0.0       24       2.4       2.6
count= 1448     5792       3.0       0.1        8       2.7       2.8
count= 2048     8192       2.9       0.1       31       2.6       2.5
count= 2896    11584       3.0       0.0       32       2.5       2.8
count= 4096    16384       3.0       0.1        8       2.9       3.0
count= 5793    23172       3.0       0.0       32       2.8       2.7
count= 8192    32768       2.8       0.1       32       2.3       2.8
count= 11585    46340       3.1       0.0       22       2.8       2.8
count= 16384    65536       3.1       0.0        8       2.7       3.0
count= 23170    92680       3.0       0.0       24       2.9       2.5
count= 32768   131072       3.1       0.0       24       2.9       2.6
count= 46341   185364       3.0       0.0       24       2.8       2.7
count= 65536   262144       3.0       0.0       32       2.7       2.6
count= 92682   370728       3.1       0.0        8       2.9       3.0
count= 131072   524288       3.1       0.0       32       2.8       2.9
count= 185364   741456       3.1       0.0       24       2.7       2.9
count= 262144  1048576       3.1       0.0       32       2.7       2.9
# end result "MPI_Win_fence_open"
# duration = 2.23 sec

# begin result "MPI_Win_fence_close"
count= 1        4     141.3       0.3        8     134.1     141.3
count= 2        8     141.7       0.5        8     138.3     141.7
count= 3       12     140.7       0.3        8     136.0     140.7
count= 4       16     140.4       0.3        8     137.3     140.4
count= 6       24     140.5       0.3        8     137.3     140.5
count= 8       32     139.8       0.8        8     137.0     139.8
count= 11       44     140.0       0.6        8     137.6     139.5
count= 16       64     141.4       0.3        8     137.7     141.4
count= 23       92     140.4       0.6        8     137.3     140.1
count= 32      128     142.1       1.0        8     138.4     140.8
count= 45      180     138.3       0.2        8     137.0     138.2
count= 64      256     142.2       0.6        8     137.7     142.2
count= 91      364     140.5       1.6        8     138.6     140.0
count= 128      512     138.0       1.1        8     134.5     136.7
count= 181      724     136.6       0.5        8     133.8     136.6
count= 256     1024     141.7       0.2        8     138.2     141.2
count= 362     1448     141.9       0.7        8     138.7     141.4
count= 512     2048     142.1       0.2        8     138.8     142.1
count= 724     2896     141.9       0.4       16     139.8     140.4
count= 1024     4096     140.7       0.7        8     135.6     140.7
count= 1448     5792     141.3       0.2        8     137.7     141.3
count= 2048     8192     142.8       0.5        8     138.8     142.3
count= 2896    11584     141.1       0.2       32     137.0     141.1
count= 4096    16384     137.0       0.1        8     133.0     137.0
count= 5793    23172     136.1       0.4        8     133.5     135.5
count= 8192    32768     141.2       0.2        8     139.1     141.0
count= 11585    46340     136.6       0.5        8     133.2     136.6
count= 16384    65536     140.2       0.2        8     139.2     139.3
count= 23170    92680     138.3       0.2        8     134.4     138.3
count= 32768   131072     142.7       0.4       12     136.5     142.5
count= 46341   185364     142.0       0.5       21     137.4     141.7
count= 65536   262144     141.0       0.1        8     137.0     141.0
count= 92682   370728     140.4       0.3        8     138.9     140.0
count= 131072   524288     137.1       0.7        8     136.0     136.8
count= 185364   741456     141.1       0.3       16     137.7     140.6
count= 262144  1048576     141.7       0.6        8     137.5     141.7
# end result "MPI_Win_fence_close"
# duration = 1.82 sec

# begin result "MPI_Win_fence_close-noput"
count= 1        4     138.8       0.6        8     134.3     138.8
count= 2        8     141.2       0.2        8     138.2     141.0
count= 3       12     140.5       0.3        8     138.0     140.5
count= 4       16     141.7       0.2        8     137.2     141.7
count= 6       24     138.5       0.5        8     138.0     138.3
count= 8       32     141.0       0.4        8     137.5     141.0
count= 11       44     138.3       0.7        8     137.2     136.5
count= 16       64     140.4       0.5        8     137.5     140.4
count= 23       92     140.9       0.4        8     139.0     140.7
count= 32      128     141.0       0.1        8     138.5     140.5
count= 45      180     141.2       0.7        8     137.7     141.0
count= 64      256     138.6       0.7        8     134.5     138.6
count= 91      364     141.6       0.5        8     138.4     140.0
count= 128      512     140.4       0.5        8     137.3     140.4
count= 181      724     141.9       0.3       14     137.5     141.9
count= 256     1024     141.7       0.8        8     139.1     140.5
count= 362     1448     138.3       0.7        8     134.5     138.3
count= 512     2048     140.0       0.4        8     135.5     140.0
count= 724     2896     141.6       0.3        8     137.0     141.6
count= 1024     4096     137.9       0.1        8     134.6     137.7
count= 1448     5792     141.5       0.2        8     137.3     141.5
count= 2048     8192     141.0       0.3        8     137.4     141.0
count= 2896    11584     142.8       0.5        8     140.2     142.0
count= 4096    16384     139.0       0.0        8     134.5     139.0
count= 5793    23172     140.5       0.3        8     135.7     140.5
count= 8192    32768     142.9       0.7        8     139.2     141.9
count= 11585    46340     142.1       0.4        8     137.8     142.1
count= 16384    65536     141.4       0.2        8     137.6     141.4
count= 23170    92680     141.5       0.3        8     139.0     141.2
count= 32768   131072     140.5       0.9        8     138.8     140.5
count= 46341   185364     143.1       0.4        8     139.1     143.1
count= 65536   262144     141.3       0.3        8     139.0     141.3
count= 92682   370728     139.1       0.6        8     135.2     139.1
count= 131072   524288     141.3       0.3        8     136.3     141.3
count= 185364   741456     139.5       0.3        8     134.5     139.5
count= 262144  1048576     140.8       0.5        8     136.5     140.8
# end result "MPI_Win_fence_close-noput"
# duration = 1.65 sec

# begin result "MPI_Win_fence_close-nodes-short"
procs= 1       16      12.7       0.2        8      12.7
procs= 2       16     140.7       0.5        8     137.7     140.7
# end result "MPI_Win_fence_close-nodes-short"
# duration = 0.05 sec

# begin result "MPI_Win_fence_close-nodes-long"
procs= 1  1048576      11.9       0.0        8      11.9
procs= 2  1048576     141.3       0.3        8     138.5     141.3
# end result "MPI_Win_fence_close-nodes-long"
# duration = 0.05 sec

# begin result "MPI_Win_fence_openclose"
procs= 1  1048576      11.9       0.0        8      11.9
procs= 2  1048576     145.6       0.5       32     141.4     144.5
# end result "MPI_Win_fence_openclose"
# duration = 0.19 sec

# begin result "MPI_Win_start"
procs= 1  1048576       2.9       0.1       32       2.9
procs= 2  1048576       3.4       0.1       32       3.4    ---   
# end result "MPI_Win_start"
# duration = 0.09 sec

# begin result "MPI_Win_start with MPI_MODE_NOCHECK"
procs= 1  1048576       3.0       0.1        8       3.0
procs= 2  1048576       3.7       0.1       24       3.7    ---   
# end result "MPI_Win_start with MPI_MODE_NOCHECK"
# duration = 0.08 sec

# begin result "MPI_Win_start with delayed MPI_Win_post"
procs= 1  1048576       3.0       0.0       32       3.0
procs= 2  1048576       3.4       0.1       22       3.4    ---   
# end result "MPI_Win_start with delayed MPI_Win_post"
# duration = 0.79 sec

# begin result "MPI_Win_post"
procs= 1  1048576       8.0       0.1        8       8.0
procs= 2  1048576      65.9       0.3       16      65.9      43.2
# end result "MPI_Win_post"
# duration = 0.07 sec

# begin result "MPI_Win_post with MPI_MODE_NOCHECK"
procs= 1  1048576       8.5       0.2        8       8.5
procs= 2  1048576      65.7       0.5        8      65.7      43.5
# end result "MPI_Win_post with MPI_MODE_NOCHECK"
# duration = 0.05 sec

# begin result "MPI_Win_post with MPI_MODE_NOSTORE"
procs= 1  1048576       8.9       0.1        8       8.9
procs= 2  1048576      64.3       0.6        8      64.3      43.3
# end result "MPI_Win_post with MPI_MODE_NOSTORE"
# duration = 0.05 sec

# begin result "MPI_Win_complete"
procs= 1  1048576      10.3       0.2        8      10.3
procs= 2  1048576   15259.5     110.3        8   15259.5    ---   
# end result "MPI_Win_complete"
# duration = 0.32 sec

# begin result "MPI_Win_complete without MPI_Put"
procs= 1  1048576      10.0       0.0        8      10.0
procs= 2  1048576     109.0       0.0        8     109.0    ---   
# end result "MPI_Win_complete without MPI_Put"
# duration = 0.05 sec

# begin result "MPI_Win_complete delayed"
procs= 2  1048576   61693.2      31.4        8   61693.2    ---   
# end result "MPI_Win_complete delayed"
# duration = 0.97 sec

# begin result "MPI_Win_complete delayed, small"
procs= 2        4     115.7       0.3       32     115.7    ---   
# end result "MPI_Win_complete delayed, small"
# duration = 2.38 sec

# begin result "MPI_Win_complete delayed without MPI_Put"
procs= 2  1048576     112.4       0.3       32     112.4    ---   
# end result "MPI_Win_complete delayed without MPI_Put"
# duration = 2.39 sec

# begin result "MPI_Win_wait delayed"
procs= 2  1048576   65716.4      62.0        8   65716.4    ---   
# end result "MPI_Win_wait delayed"
# duration = 1.01 sec

# begin result "MPI_Win_wait delayed,small"
procs= 2        4   50161.1       2.3        8   50161.1    ---   
# end result "MPI_Win_wait delayed,small"
# duration = 0.77 sec

# begin result "MPI_Win_wait delayed without MPI_Put"
procs= 2  1048576   50159.5       6.5        8   50159.5    ---   
# end result "MPI_Win_wait delayed without MPI_Put"
# duration = 0.77 sec

